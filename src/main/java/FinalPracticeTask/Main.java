package FinalPracticeTask;

import FinalPracticeTask.Animal;
import FinalPracticeTask.AnimalFarm;
import java.util.ArrayList;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        // Создаём изменяемый список животных на ферме
        AnimalFarm farm = new AnimalFarm(new ArrayList<>(Arrays.asList("DOG Жучка", "CAT Мурка", "COW Бурёнка", "DOG Бобик", "HORSE Гром", "CAT")));

        // Тест Задание 1: Вызываем метод countedAnimals для подсчета животных
        System.out.println("Количество животных по видам: " + farm.countedAnimals());

        // Тест Задание 2: Вызываем метод uniqueNames для получения уникальных имён
        System.out.println("Уникальные имена животных: " + farm.uniqueNames());

        // Тест Задание 3: Добавляем новых животных для каждого вида
        farm.addFarmAnimal(Animal.DOG, "Рекс");
        farm.addFarmAnimal(Animal.COW, "Дуня");
        farm.addFarmAnimal(Animal.HORSE, "Шторм");
        farm.addFarmAnimal(Animal.CAT, "Барсик");
        farm.addFarmAnimal(Animal.HORSE); // Имя животного будет N
        farm.addFarmAnimal("Пушистик"); // Вид животного NOT_DEFINED

        // Тест Задание 4: Выводим обновлённый список животных с помощью toString
        System.out.println("Обновлённый список животных на ферме:");
        System.out.println(farm);
    }
}

/*Объяснение:
1. Создание объекта AnimalFarm с начальным списком животных
* Что происходит: Создается объект AnimalFarm с начальным списком животных. Животные передаются как список строк,
где первая часть — это вид животного (например, "DOG"), а вторая — его имя (например, "Жучка").
Для создания изменяемого списка используется ArrayList, который инициализируется с помощью Arrays.asList().
* Пример списка:
"DOG Жучка" (собака с именем Жучка)
"CAT Мурка" (кошка с именем Мурка)
"COW Бурёнка" (корова с именем Бурёнка)
"DOG Бобик" (собака с именем Бобик)
"HORSE Гром" (лошадь с именем Гром)
"CAT" (кошка без указанного имени)

2. Подсчет животных по видам:
* Что происходит: Вызов метода countedAnimals подсчитывает количество животных каждого вида
(например, сколько собак, кошек и т.д.) и возвращает результат в виде карты (Map<Animal, Integer>),
где ключ — это вид животного (Animal), а значение — количество животных этого вида.
* Вывод: В консоль выводится строка с количеством животных по видам, например: Количество животных по видам:
{DOG=2, CAT=2, COW=1, HORSE=1}.

3. Получение уникальных имён животных:
* Что происходит: Метод uniqueNames собирает и возвращает множество уникальных имен животных.
Строки в списке разбиваются на части, и вторые элементы (имена животных) добавляются в множество,
которое не допускает дублирующихся значений.
* Вывод: В консоль выводится список уникальных имен животных, например: Уникальные имена животных:
[Жучка, Мурка, Бурёнка, Бобик, Гром].

4. Добавление новых животных на ферму:
* Что происходит: Здесь вызываются разные версии метода addFarmAnimal для добавления новых животных на ферму.
farm.addFarmAnimal(Animal.DOG, "Рекс"); — добавляет собаку с именем "Рекс".
farm.addFarmAnimal(Animal.COW, "Дуня"); — добавляет корову с именем "Дуня".
farm.addFarmAnimal(Animal.HORSE, "Шторм"); — добавляет лошадь с именем "Шторм".
farm.addFarmAnimal(Animal.CAT, "Барсик"); — добавляет кота с именем "Барсик".
farm.addFarmAnimal(Animal.HORSE); — добавляет лошадь без имени. Имя по умолчанию будет "N".
farm.addFarmAnimal("Пушистик"); — добавляет животное с видом NOT_DEFINED и именем "Пушистик".
* Результат: Эти методы добавляют новые строки в список животных в объекте AnimalFarm.

5. Вывод обновлённого списка животных с помощью toString:
* Что происходит: Вызов метода toString для объекта AnimalFarm выводит обновленный список всех животных на ферме.
Этот метод был переопределен, чтобы возвращать список животных в виде строки,
где каждая запись выводится с новой строки.
* Пример вывода:
Обновлённый список животных на ферме:
DOG Жучка
CAT Мурка
COW Бурёнка
DOG Бобик
HORSE Гром
CAT
DOG Рекс
COW Дуня
HORSE Шторм
CAT Барсик
HORSE N
NOT_DEFINED Пушистик
 */


